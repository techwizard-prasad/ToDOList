{"ast":null,"code":"import _slicedToArray from \"C:\\\\Users\\\\user\\\\Desktop\\\\PrasadData\\\\React\\\\todolist\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\user\\\\Desktop\\\\PrasadData\\\\React\\\\todolist\\\\src\\\\Component\\\\Popup.js\";\nimport React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Popover from \"@material-ui/core/Popover\";\nimport Typography from \"@material-ui/core/Typography\";\nconst useStyles = makeStyles(theme => ({\n  typography: {\n    padding: theme.spacing(2)\n  }\n}));\nexport default function SimplePopover(props) {\n  const classes = useStyles();\n\n  const _React$useState = React.useState(null),\n        _React$useState2 = _slicedToArray(_React$useState, 2),\n        anchorEl = _React$useState2[0],\n        setAnchorEl = _React$useState2[1];\n\n  setAnchorEl(props.popupTarget);\n\n  function handleClose() {\n    setAnchorEl(null);\n  }\n\n  const open = Boolean(anchorEl);\n  const id = open ? \"simple-popover\" : undefined;\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26\n    },\n    __self: this\n  }, React.createElement(Popover, {\n    id: id,\n    open: open,\n    anchorEl: anchorEl,\n    onClose: handleClose,\n    anchorOrigin: {\n      vertical: \"bottom\",\n      horizontal: \"center\"\n    },\n    transformOrigin: {\n      vertical: \"top\",\n      horizontal: \"center\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27\n    },\n    __self: this\n  }, React.createElement(Typography, {\n    className: classes.typography,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41\n    },\n    __self: this\n  }, \"The content of the Popover.\")));\n}","map":{"version":3,"sources":["C:\\Users\\user\\Desktop\\PrasadData\\React\\todolist\\src\\Component\\Popup.js"],"names":["React","makeStyles","Popover","Typography","useStyles","theme","typography","padding","spacing","SimplePopover","props","classes","useState","anchorEl","setAnchorEl","popupTarget","handleClose","open","Boolean","id","undefined","vertical","horizontal"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,UAAT,QAA2B,0BAA3B;AACA,OAAOC,OAAP,MAAoB,2BAApB;AACA,OAAOC,UAAP,MAAuB,8BAAvB;AAEA,MAAMC,SAAS,GAAGH,UAAU,CAACI,KAAK,KAAK;AACrCC,EAAAA,UAAU,EAAE;AACVC,IAAAA,OAAO,EAAEF,KAAK,CAACG,OAAN,CAAc,CAAd;AADC;AADyB,CAAL,CAAN,CAA5B;AAMA,eAAe,SAASC,aAAT,CAAuBC,KAAvB,EAA8B;AAC3C,QAAMC,OAAO,GAAGP,SAAS,EAAzB;;AAD2C,0BAEXJ,KAAK,CAACY,QAAN,CAAe,IAAf,CAFW;AAAA;AAAA,QAEpCC,QAFoC;AAAA,QAE1BC,WAF0B;;AAI3CA,EAAAA,WAAW,CAACJ,KAAK,CAACK,WAAP,CAAX;;AAEA,WAASC,WAAT,GAAuB;AACrBF,IAAAA,WAAW,CAAC,IAAD,CAAX;AACD;;AAED,QAAMG,IAAI,GAAGC,OAAO,CAACL,QAAD,CAApB;AACA,QAAMM,EAAE,GAAGF,IAAI,GAAG,gBAAH,GAAsBG,SAArC;AAEA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,OAAD;AACE,IAAA,EAAE,EAAED,EADN;AAEE,IAAA,IAAI,EAAEF,IAFR;AAGE,IAAA,QAAQ,EAAEJ,QAHZ;AAIE,IAAA,OAAO,EAAEG,WAJX;AAKE,IAAA,YAAY,EAAE;AACZK,MAAAA,QAAQ,EAAE,QADE;AAEZC,MAAAA,UAAU,EAAE;AAFA,KALhB;AASE,IAAA,eAAe,EAAE;AACfD,MAAAA,QAAQ,EAAE,KADK;AAEfC,MAAAA,UAAU,EAAE;AAFG,KATnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAcE,oBAAC,UAAD;AAAY,IAAA,SAAS,EAAEX,OAAO,CAACL,UAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mCAdF,CADF,CADF;AAsBD","sourcesContent":["import React from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Popover from \"@material-ui/core/Popover\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  typography: {\r\n    padding: theme.spacing(2)\r\n  }\r\n}));\r\n\r\nexport default function SimplePopover(props) {\r\n  const classes = useStyles();\r\n  const [anchorEl, setAnchorEl] = React.useState(null);\r\n\r\n  setAnchorEl(props.popupTarget);\r\n\r\n  function handleClose() {\r\n    setAnchorEl(null);\r\n  }\r\n\r\n  const open = Boolean(anchorEl);\r\n  const id = open ? \"simple-popover\" : undefined;\r\n\r\n  return (\r\n    <div>\r\n      <Popover\r\n        id={id}\r\n        open={open}\r\n        anchorEl={anchorEl}\r\n        onClose={handleClose}\r\n        anchorOrigin={{\r\n          vertical: \"bottom\",\r\n          horizontal: \"center\"\r\n        }}\r\n        transformOrigin={{\r\n          vertical: \"top\",\r\n          horizontal: \"center\"\r\n        }}\r\n      >\r\n        <Typography className={classes.typography}>\r\n          The content of the Popover.\r\n        </Typography>\r\n      </Popover>\r\n    </div>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}