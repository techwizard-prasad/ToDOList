{"ast":null,"code":"import _slicedToArray from \"C:\\\\Users\\\\user\\\\Desktop\\\\PrasadData\\\\React\\\\ToDoList\\\\ToDOList\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\user\\\\Desktop\\\\PrasadData\\\\React\\\\ToDoList\\\\ToDOList\\\\src\\\\Component\\\\TodoList.js\";\nimport React, { useState } from \"react\";\nimport Fab from \"@material-ui/core/Fab\";\nimport AddIcon from \"@material-ui/icons/Add\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Item from \"./Item.js\";\nimport AddItem from \"./AddItem\";\n\nconst TodoList = () => {\n  const _useState = useState([]),\n        _useState2 = _slicedToArray(_useState, 2),\n        list = _useState2[0],\n        setList = _useState2[1];\n\n  const _useState3 = useState(0),\n        _useState4 = _slicedToArray(_useState3, 2),\n        maxId = _useState4[0],\n        setMaxId = _useState4[1];\n\n  const _useState5 = useState(false),\n        _useState6 = _slicedToArray(_useState5, 2),\n        showPopup = _useState6[0],\n        setShowPopup = _useState6[1];\n\n  const handleClick = e => {\n    setShowPopup(true);\n  };\n\n  const closePopup = () => {\n    setShowPopup(false);\n  };\n\n  const saveTask = (task, id) => {\n    if (id) {\n      let newList = list.map(item => {\n        return {\n          id: item.id,\n          task: Number(item.id) === Number(id) ? task : item.task,\n          complete: item.complete\n        };\n      });\n      newList = sortList(newList);\n      setList(newList);\n    } else {\n      task = task.trim();\n\n      if (task !== \"\") {\n        let newList = list;\n        newList.push({\n          id: maxId + 1,\n          task: task,\n          complete: false\n        });\n        newList = sortList(newList);\n        setList(newList);\n        setMaxId(maxId + 1);\n        setShowPopup(false);\n      } else {\n        alert(\"Task is not entered.\");\n        setShowPopup(false);\n      }\n    }\n  };\n\n  const sortList = list => {\n    return list.sort((a, b) => {\n      return a.complete - b.complete;\n    });\n  };\n\n  const deleteTask = id => {\n    let newList = list;\n    newList = newList.filter(item => Number(item.id) !== Number(id));\n    setList(newList);\n  };\n\n  const completeTask = id => {\n    let newList = list.map(item => {\n      return {\n        id: item.id,\n        task: item.task,\n        complete: Number(item.id) === Number(id) ? !item.complete : item.complete\n      };\n    });\n    newList = sortList(newList);\n    setList(newList);\n  };\n\n  const listItems = list.map((item, key) => React.createElement(\"div\", {\n    key: key,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82\n    },\n    __self: this\n  }, React.createElement(Item, {\n    item: item,\n    deleteTask: deleteTask,\n    completeTask: completeTask,\n    saveTask: saveTask,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83\n    },\n    __self: this\n  })));\n  const content = React.createElement(\"div\", {\n    className: \"listMainContainer\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: showPopup ? \"listContainer disable\" : \"listContainer\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94\n    },\n    __self: this\n  }, listItems.length > 0 ? listItems : React.createElement(Typography, {\n    variant: \"h6\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98\n    },\n    __self: this\n  }, \"There are no tasks.\")), showPopup && React.createElement(AddItem, {\n    task: \"\",\n    closePopup: closePopup,\n    saveTask: saveTask,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103\n    },\n    __self: this\n  }), React.createElement(Fab, {\n    color: \"primary\",\n    \"aria-label\": \"add\",\n    className: \"AddIcon\",\n    title: \"Add task\",\n    onClick: handleClick,\n    style: {\n      position: \"fixed\",\n      top: \"85%\",\n      left: \"65%\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105\n    },\n    __self: this\n  }, React.createElement(AddIcon, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113\n    },\n    __self: this\n  })));\n  return content;\n};\n\nexport default TodoList;","map":{"version":3,"sources":["C:\\Users\\user\\Desktop\\PrasadData\\React\\ToDoList\\ToDOList\\src\\Component\\TodoList.js"],"names":["React","useState","Fab","AddIcon","Typography","Item","AddItem","TodoList","list","setList","maxId","setMaxId","showPopup","setShowPopup","handleClick","e","closePopup","saveTask","task","id","newList","map","item","Number","complete","sortList","trim","push","alert","sort","a","b","deleteTask","filter","completeTask","listItems","key","content","length","position","top","left"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\r\nimport Fab from \"@material-ui/core/Fab\";\r\nimport AddIcon from \"@material-ui/icons/Add\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\n\r\nimport Item from \"./Item.js\";\r\nimport AddItem from \"./AddItem\";\r\n\r\nconst TodoList = () => {\r\n  const [list, setList] = useState([]);\r\n  const [maxId, setMaxId] = useState(0);\r\n  const [showPopup, setShowPopup] = useState(false);\r\n\r\n  const handleClick = e => {\r\n    setShowPopup(true);\r\n  };\r\n\r\n  const closePopup = () => {\r\n    setShowPopup(false);\r\n  };\r\n\r\n  const saveTask = (task, id) => {\r\n    if (id) {\r\n      let newList = list.map(item => {\r\n        return {\r\n          id: item.id,\r\n          task: Number(item.id) === Number(id) ? task : item.task,\r\n          complete: item.complete\r\n        };\r\n      });\r\n      newList = sortList(newList);\r\n      setList(newList);\r\n    } else {\r\n      task = task.trim();\r\n\r\n      if (task !== \"\") {\r\n        let newList = list;\r\n        newList.push({\r\n          id: maxId + 1,\r\n          task: task,\r\n          complete: false\r\n        });\r\n        newList = sortList(newList);\r\n\r\n        setList(newList);\r\n        setMaxId(maxId + 1);\r\n        setShowPopup(false);\r\n      } else {\r\n        alert(\"Task is not entered.\");\r\n        setShowPopup(false);\r\n      }\r\n    }\r\n  };\r\n\r\n  const sortList = list => {\r\n    return list.sort((a, b) => {\r\n      return a.complete - b.complete;\r\n    });\r\n  };\r\n\r\n  const deleteTask = id => {\r\n    let newList = list;\r\n    newList = newList.filter(item => Number(item.id) !== Number(id));\r\n    setList(newList);\r\n  };\r\n\r\n  const completeTask = id => {\r\n    let newList = list.map(item => {\r\n      return {\r\n        id: item.id,\r\n        task: item.task,\r\n        complete:\r\n          Number(item.id) === Number(id) ? !item.complete : item.complete\r\n      };\r\n    });\r\n    newList = sortList(newList);\r\n\r\n    setList(newList);\r\n  };\r\n\r\n  const listItems = list.map((item, key) => (\r\n    <div key={key}>\r\n      <Item\r\n        item={item}\r\n        deleteTask={deleteTask}\r\n        completeTask={completeTask}\r\n        saveTask={saveTask}\r\n      />\r\n    </div>\r\n  ));\r\n\r\n  const content = (\r\n    <div className=\"listMainContainer\">\r\n      <div className={showPopup ? \"listContainer disable\" : \"listContainer\"}>\r\n        {listItems.length > 0 ? (\r\n          listItems\r\n        ) : (\r\n          <Typography variant=\"h6\">There are no tasks.</Typography>\r\n        )}\r\n      </div>\r\n\r\n      {showPopup && (\r\n        <AddItem task=\"\" closePopup={closePopup} saveTask={saveTask} />\r\n      )}\r\n      <Fab\r\n        color=\"primary\"\r\n        aria-label=\"add\"\r\n        className=\"AddIcon\"\r\n        title=\"Add task\"\r\n        onClick={handleClick}\r\n        style={{ position: \"fixed\", top: \"85%\", left: \"65%\" }}\r\n      >\r\n        <AddIcon />\r\n      </Fab>\r\n    </div>\r\n  );\r\n\r\n  return content;\r\n};\r\nexport default TodoList;\r\n"]},"metadata":{},"sourceType":"module"}